import { useState } from 'react'
import { useNavigate } from 'react-router-dom'
import illustration from '../assets/illustration.png'

function Login() {
  const navigate = useNavigate()
  const [email, setEmail] = useState('')
  const [password, setPassword] = useState('')
  const [error, setError] = useState('')
  const [loading, setLoading] = useState(false)

  const handleLogin = async () => {
    if (!email || !password) {
      setError('–í–≤–µ–¥–∏—Ç–µ –ø–æ—á—Ç—É –∏ –ø–∞—Ä–æ–ª—å');
      return;
    }

    try {
<<<<<<< HEAD
<<<<<<< HEAD
      setLoading(true)
      setError('')

=======
=======
>>>>>>> 043711b (—Ñ–∏–Ω–∞–ª)
      setLoading(true);
      setError('');

      // üîê –ó–∞–ø—Ä–æ—Å –Ω–∞ –ª–æ–≥–∏–Ω
<<<<<<< HEAD
>>>>>>> ace2cd8 (—Ñ–∏–Ω–∞–ª 1)
=======
>>>>>>> 043711b (—Ñ–∏–Ω–∞–ª)
      const response = await fetch('http://localhost:8000/auth/jwt/create/', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({ email, password }),
<<<<<<< HEAD
<<<<<<< HEAD
      })

      const data = await response.json()

      if (!response.ok) {
        throw new Error(data.detail || '–û—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞')
      }

      // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–æ–∫–µ–Ω—ã
      localStorage.setItem('access', data.access)
      localStorage.setItem('refresh', data.refresh)

      navigate('/project')
    } catch (err) {
      setError(err.message)
    } finally {
      setLoading(false)
    }
  }
=======
=======
>>>>>>> 043711b (—Ñ–∏–Ω–∞–ª)
      });

      const data = await response.json();

      if (!response.ok) {
        throw new Error(data.detail || '–û—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞');
      }

      // üíæ –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–æ–∫–µ–Ω—ã
      localStorage.setItem('access', data.access);
      localStorage.setItem('refresh', data.refresh);

      // üì¶ –ü–æ–ª—É—á–∞–µ–º –ø—Ä–æ–µ–∫—Ç—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      const projectsRes = await fetch('http://localhost:8000/projects/', {
        headers: {
          Authorization: `Bearer ${data.access}`,
        },
      });

      if (!projectsRes.ok) {
        throw new Error('–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–æ–≤');
      }

      const projects = await projectsRes.json();

      if (!projects.length) {
        throw new Error('–ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤');
      }

      const firstProjectId = projects[0].id;

      // üì¶ –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å–∫–∏ (cards) –ø—Ä–æ–µ–∫—Ç–∞
      const cardsRes = await fetch(`http://localhost:8000/cards/projects/${firstProjectId}/cards/`, {
        headers: {
          Authorization: `Bearer ${data.access}`,
        },
      });

      if (!cardsRes.ok) {
        throw new Error('–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–æ—Å–æ–∫ –ø—Ä–æ–µ–∫—Ç–∞');
      }

      const cards = await cardsRes.json();

      if (!cards.length) {
        throw new Error('–í –ø—Ä–æ–µ–∫—Ç–µ –Ω–µ—Ç –¥–æ—Å–æ–∫');
      }

      // ‚úÖ –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ –ø–µ—Ä–≤—É—é –¥–æ—Å–∫—É
      navigate(`/projects/${firstProjectId}/boards/0`);
    } catch (err) {
      setError(err.message);
    } finally {
      setLoading(false);
    }
  };

<<<<<<< HEAD
>>>>>>> ace2cd8 (—Ñ–∏–Ω–∞–ª 1)
=======
>>>>>>> 043711b (—Ñ–∏–Ω–∞–ª)

  return (
    <div className="login-wrapper">
      <div className="login-left">
        <div className="logo">TREKER</div>
        <img src={illustration} alt="–ò–ª–ª—é—Å—Ç—Ä–∞—Ü–∏—è" className="illustration" />
      </div>

      <div className="divider"></div>

      <div className="login-right">
        <div className="login-box">
          <h2>–ê–í–¢–û–†–ò–ó–ê–¶–ò–Ø</h2>

          {error && <div className="info-message">{error}</div>}

          <input
            type="email"
            placeholder="—ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∞—è –ø–æ—á—Ç–∞"
            value={email}
            onChange={(e) => setEmail(e.target.value)}
          />
          <input
            type="password"
            placeholder="–ø–∞—Ä–æ–ª—å"
            value={password}
            onChange={(e) => setPassword(e.target.value)}
          />

          <button onClick={handleLogin} disabled={loading}>
            {loading ? '–ó–∞–≥—Ä—É–∑–∫–∞...' : '–í–û–ô–¢–ò'}
          </button>

          <p className="link" onClick={() => navigate('/register')}>
            –†–ï–ì–ò–°–¢–†–ê–¶–ò–Ø
          </p>
        </div>
      </div>
    </div>
  )
}

export default Login
